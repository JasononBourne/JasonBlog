<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Follow 认证</title>
    <url>/2024/12/12/Follow-%E8%AE%A4%E8%AF%81/</url>
    <content><![CDATA[<p>This message is used to verify that this feed (feedId:90028854970056704) belongs to me (userId:82029460839054336). Join me in enjoying the next generation information browser <a href="https://follow.is/">https://follow.is</a>.</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>follow</tag>
        <tag>rss</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenAi生成赛博朋克图画</title>
    <url>/2024/12/13/OpenAi%E7%94%9F%E6%88%90%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B%E5%9B%BE%E7%94%BB/</url>
    <content><![CDATA[<h3 id="图一："><a href="#图一：" class="headerlink" title="图一："></a>图一：</h3><span id="more"></span>
<p><img src="/uploads/openai/pic1.webp" alt="图片"></p>
<h3 id="图二："><a href="#图二：" class="headerlink" title="图二："></a>图二：</h3><p><img src="/uploads/openai/pic2.webp" alt="图"></p>
]]></content>
      <categories>
        <category>人工智能</category>
      </categories>
      <tags>
        <tag>Ai</tag>
        <tag>chatgpt</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/12/12/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>我的第一篇博客：如何优雅地搭建Hexo博客</title>
    <url>/2024/12/12/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>自从踏入计算机领域以来，我已经学习了很多的相关知识和技能。在这段时间里，我接触了各种各样的编程语言、框架、工具和理论。然而，学习的知识如果不经常复习和应用，很快就会被遗忘。之前我尝试过在GitHub上用Markdown记录学习心得，但结果往往是杂乱无章，难以查找和回顾。因此，我决定搭建一个个人博客，用来系统地记录和分享我的学习历程和技术见解。今天，我就从如何搭建Hexo博客开始吧。</p>
<span id="more"></span>

<h2 id="什么是Hexo、GitHub-Pages和Next？"><a href="#什么是Hexo、GitHub-Pages和Next？" class="headerlink" title="什么是Hexo、GitHub Pages和Next？"></a>什么是Hexo、GitHub Pages和Next？</h2><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>Hexo是一个基于Node.js的快速、简洁且高效的静态博客框架。它使用Markdown（或其他渲染引擎）解析文章，安装方便，配置简单，自定义功能强大。</p>
<h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><p>GitHub Pages是GitHub提供的静态网站托管服务。它直接从GitHub上获取HTML、CSS和JavaScript文件，通过构建过程运行文件，然后发布网站。通过GitHub Pages，我们可以免费托管自己的博客。</p>
<h3 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h3><p>Next是Hexo的一个高品质主题，它提供了多种布局和样式，让你的博客界面既美观又专业。许多博主，包括我在内，都选择使用Next主题。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Hexo结合Markdown格式的博客内容和Next主题生成静态页面，这些页面通过GitHub Pages服务发布，供大家浏览。</p>
<h2 id="实践！搭建Hexo博客"><a href="#实践！搭建Hexo博客" class="headerlink" title="实践！搭建Hexo博客"></a>实践！搭建Hexo博客</h2><h3 id="Step1：创建GitHub账号和仓库"><a href="#Step1：创建GitHub账号和仓库" class="headerlink" title="Step1：创建GitHub账号和仓库"></a>Step1：创建GitHub账号和仓库</h3><h4 id="创建GitHub账号"><a href="#创建GitHub账号" class="headerlink" title="创建GitHub账号"></a>创建GitHub账号</h4><ul>
<li>访问GitHub官网（<code>github.com</code>），点击右上角的“Sign up”按钮。</li>
<li>填写你的用户名、电子邮件地址和密码，完成注册。</li>
<li>验证你的电子邮件地址以激活账号。</li>
</ul>
<h4 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h4><ul>
<li>登录GitHub后，点击右上角的“+”号，选择“New repository”。</li>
<li>输入仓库名称，格式必须是<code>&lt;username&gt;.github.io</code>，其中<code>&lt;username&gt;</code>是你GitHub的用户名。</li>
<li>选择仓库的可见性（通常选择“Public”以便GitHub Pages能够访问）。</li>
<li>勾选“Initialize this repository with a README”选项（可选），这将创建一个初始的README文件。</li>
<li>点击“Create repository”按钮。</li>
</ul>
<h4 id="解决可能遇到的问题"><a href="#解决可能遇到的问题" class="headerlink" title="解决可能遇到的问题"></a>解决可能遇到的问题</h4><ul>
<li><strong>仓库名称错误</strong>：确保仓库名称准确无误，格式为<code>&lt;username&gt;.github.io</code>。</li>
</ul>
<h3 id="Step2：在Windows上部署Hexo环境"><a href="#Step2：在Windows上部署Hexo环境" class="headerlink" title="Step2：在Windows上部署Hexo环境"></a>Step2：在Windows上部署Hexo环境</h3><h4 id="下载和安装Node-js"><a href="#下载和安装Node-js" class="headerlink" title="下载和安装Node.js"></a>下载和安装Node.js</h4><ul>
<li>访问Node.js官方下载页面（<a href="https://nodejs.org/en/download/">Node.js Downloads</a>）。</li>
<li>下载适合Windows系统的LTS（长期支持）版本的Node.js安装包（例如，.msi文件）。</li>
<li>双击安装包，按照提示完成安装，确保勾选“Add to PATH”选项。</li>
</ul>
<h4 id="下载和安装Git"><a href="#下载和安装Git" class="headerlink" title="下载和安装Git"></a>下载和安装Git</h4><ul>
<li>访问Git for Windows的下载页面（<a href="https://gitforwindows.org/">Git for Windows</a>）。</li>
<li>下载最新版本的Git安装包（如Git-2.XX.XX-64-bit.exe）。</li>
<li>双击安装包，按照提示完成安装，确保选择“Use Git from the Windows Command Prompt”选项。</li>
</ul>
<h4 id="本地搭建-hexo-静态博客"><a href="#本地搭建-hexo-静态博客" class="headerlink" title="本地搭建 hexo 静态博客"></a>本地搭建 hexo 静态博客</h4><ul>
<li><p>安装 hexo 框架: 打开 cmd 运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打开命令提示符（cmd）或PowerShell</span></span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
</li>
<li><p>新建一个文件夹，如 MyBlog ，进入该文件夹内，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">g:</span><br><span class="line"><span class="built_in">cd</span> G:\MyBlog</span><br><span class="line">G:\MyBlog&gt;hexo init</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成完 hexo 模板，安装 npm ，运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;npm install</span><br></pre></td></tr></table></figure>
</li>
<li><p>博客的主体已经完成了。运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo server</span><br></pre></td></tr></table></figure>
</li>
<li><p>这时候打开浏览器，输入 localhost:4000 就可以看到博客目前的样子了。按 Ctrl + C 就可以继续下面的操作了。</p>
</li>
</ul>
<h3 id="Step3：个性化设置"><a href="#Step3：个性化设置" class="headerlink" title="Step3：个性化设置"></a>Step3：个性化设置</h3><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><ul>
<li><p>下载新的主题（以<a href="http://theme-next.iissnan.com/">NexT 主题</a>为例），在根目录下运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开根目录下的 <code>_config.yml</code>，修改字段 <code>theme</code> 为:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>选择外观：打开 <code>/themes/next/_config.yml</code> ， 找到 <code>scheme</code> 字段（可用 Ctrl + F 快捷查找）。NexT提供了三种不同的外观，可以挑选一个自己喜欢的，然后去掉其中一个的 # 号(后续主要修改的也就是这两个文件： <em>站点配置文件</em> 和 <em>主题配置文件</em> 。)。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Mist</span> </span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>查看效果，可运行如下命令(以后每次想查看效果都可重复此步骤)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h4><ul>
<li><p>使用编辑器打开根目录下的站点配置文件 <code>_config.yml</code> （ Windows下不要使用记事本编辑，中文标题会出现乱码），修改字段 <code>Site</code> ， 注意冒号后面要有空格：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Jason&#x27;s</span> <span class="string">notes</span> <span class="string">//博客名称</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;Notes sharing&#x27;</span>  <span class="string">//一句签名</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Jason</span>  <span class="string">//作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="string">//网站语言</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>注意，这里有坑，language一定要写对，要不然会出现乱码，参考博文里填的是zh-Hans,结果就出现乱码，经过查看主题里面的语言（G:\MyBlog\themes\next\languages），应该选zh-CN。</p>
</li>
</ul>
<h4 id="设置侧边栏头像"><a href="#设置侧边栏头像" class="headerlink" title="设置侧边栏头像"></a>设置侧边栏头像</h4><ul>
<li><p>在 <code>/source</code> 中新建文件夹并命名为 <code>uploads</code> , 将头像图片（如： avatar.jpg ）放到该文件夹内</p>
</li>
<li><p>打开 <code>/themes/next/_config.yml</code> ，找到字段 <code>avatar</code> 并修改为:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span> </span><br><span class="line">    <span class="attr">url:</span> <span class="string">/uploads/avatar.jpg</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Step4：完善博客页面"><a href="#Step4：完善博客页面" class="headerlink" title="Step4：完善博客页面"></a>Step4：完善博客页面</h3><h4 id="添加菜单"><a href="#添加菜单" class="headerlink" title="添加菜单"></a>添加菜单</h4><ul>
<li><p>打开 <code>/themes/next/_config.yml</code> ，将字段 <code>menu</code> 中需要添加的菜单前面的注释去掉即可。如需要添加其他菜单可按需添加（注意字段的缩进）：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="创建分类页面"><a href="#创建分类页面" class="headerlink" title="创建分类页面"></a>创建分类页面</h4><ul>
<li><p>新建一个页面，命名为 <code>categories</code> ，命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo new page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑刚新建的页面 <code>/source/categories/index.md</code> ，将页面的类型设置为 <code>categories</code> ，主题将自动为这个页面显示所有分类（注意保留冒号后的空格）。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Categories</span><br><span class="line">date: 2024-04-10 23:40:31</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line"><span class="section">comments: false</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<h4 id="创建标签云界面"><a href="#创建标签云界面" class="headerlink" title="创建标签云界面"></a>创建标签云界面</h4></li>
<li><p>新建一个页面，命名为 tags ，命令如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tags</span><br><span class="line">date: 2024-04-10 23:41:25</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line"><span class="section">comments: false</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<h4 id="创建”关于我”页面"><a href="#创建”关于我”页面" class="headerlink" title="创建”关于我”页面"></a>创建”关于我”页面</h4></li>
<li><p>新建一个 about 页面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑刚新建的页面，可在正文处用 Markdown 格式写下信息。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: About</span><br><span class="line">date: 2024-04-10 23:41:56</span><br><span class="line"><span class="section">comments: false</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="设置侧边栏社交链接"><a href="#设置侧边栏社交链接" class="headerlink" title="设置侧边栏社交链接"></a>设置侧边栏社交链接</h4><ul>
<li><p>编辑站点的 <code>_config.yml</code>，找到字段 <code>social</code> ，然后添加社交站点名称与地址即可。键值格式为 <code>显示名称：链接地址</code> ，例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Social links</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/your-user-name</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:yourname@gmail.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="attr">Twitter:</span> <span class="string">https://x.com/your-user-name</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-twitter</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>打开 <code>/themes/next/_config.yml</code>, 在 <code>social_icons</code> 字段下添加社交站点名称（注意大小写）与(图标)<a href="http://fontawesome.io/icons/]%E3%80%82">[http://fontawesome.io/icons/]。</a> enable 选项用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">Twitter:</span> <span class="string">twitter</span></span><br></pre></td></tr></table></figure>

<h3 id="Step5：将博客与GitHub关联"><a href="#Step5：将博客与GitHub关联" class="headerlink" title="Step5：将博客与GitHub关联"></a>Step5：将博客与GitHub关联</h3></li>
<li><p>打开本地的 <code>MyBlog</code> 文件夹项目内的 <code>_config.yml</code> 配置文件，将其中的 <code>type</code> 设置为 <code>git</code> :</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/your-name/your-name.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>本地生成静态文件，并将静态文件推送至GitHub，运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo g  <span class="comment">#或者hexo generate</span></span><br><span class="line">G:\MyBlog&gt;hexo d</span><br></pre></td></tr></table></figure>
</li>
<li><p>此时，打开浏览器，访问 <a href="http://your-name.github.io/">http://your-name.github.io</a> ，恭喜你，到此为止你的博客已经建设完毕了。</p>
</li>
</ul>
<h3 id="Step6：增加RSS功能"><a href="#Step6：增加RSS功能" class="headerlink" title="Step6：增加RSS功能"></a>Step6：增加RSS功能</h3><h4 id="配制插件"><a href="#配制插件" class="headerlink" title="配制插件"></a>配制插件</h4><ul>
<li><p>首先添加功能插件，在 hexo 项目根目录下执行该命令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后在 hexo 根目录下的 <code>_config.yml</code> 文件中添加配置:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#订阅RSS</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置含义：  </p>
<p>type: RSS的类型(atom&#x2F;rss2)<br>path: 文件路径，默认是 atom.xml&#x2F;rss2.xml<br>limit: 展示文章的数量,使用 0 或则 false 代表展示全部<br>hub: URL of the PubSubHubbub hubs (如果使用不到可以为空)<br>content: （可选）设置 true 可以在 RSS 文件中包含文章全部内容，默认：false<br>content_limit: （可选）摘要中使用的帖子内容的默认长度。 仅在内容设置为false且未显示自定义帖子描述时才使用。<br>content_limit_delim: （可选）如果content_limit用于缩短post内容，则仅在此分隔符的最后一次出现时进行剪切，然后才达到字符限制。默认不使用。<br>icon: （可选）自定义订阅图标，默认设置为主配置中指定的图标。<br>order_by: 订阅内容的顺序。 (默认: -date)  </p>
</li>
<li><p>然后在 theme 目录下的 _config.yml 文件中添加配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#订阅RSS</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>随后重新生成博客静态文件:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>
</li>
<li><p>随后，访问<a href="http://localhost:4000/atom.xml">http://localhost:4000/atom.xml</a></p>
</li>
</ul>
<h4 id="设置侧边栏社交链接-1"><a href="#设置侧边栏社交链接-1" class="headerlink" title="设置侧边栏社交链接"></a>设置侧边栏社交链接</h4><ul>
<li><p>编辑站点的 <code>_config.yml</code>，找到字段 <code>social</code> ，然后添加社交站点名称与地址即可。键值格式为 <code>显示名称：链接地址</code> ，例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Social links</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">RSS:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-rss</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>随后重新生成博客静态文件，侧边栏已经出现RSS的图表:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Step7：将生成的静态页面部署到-github-上"><a href="#Step7：将生成的静态页面部署到-github-上" class="headerlink" title="Step7：将生成的静态页面部署到 github 上"></a>Step7：将生成的静态页面部署到 github 上</h3><ul>
<li><p>Step5已经部署过了，这里再上传一次：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo g  <span class="comment">#或者hexo generate</span></span><br><span class="line">G:\MyBlog&gt;hexo d</span><br></pre></td></tr></table></figure>

<p>过一会儿就可以在 <a href="http://your-name.github.io/">http://your-name.github.io</a> ，看到更新了！</p>
</li>
</ul>
<h3 id="Step8：写第一篇博文"><a href="#Step8：写第一篇博文" class="headerlink" title="Step8：写第一篇博文"></a>Step8：写第一篇博文</h3><ul>
<li><p>打开终端，导航到你的 Hexo 博客所在的文件夹。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo new <span class="string">&quot;你的文章标题&quot;</span></span><br></pre></td></tr></table></figure>

<p>编辑文章内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">我的第一篇文章</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2024-12-12 10:00:00</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在 — 下面添加正文内容，例如：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是我的第一篇 Hexo 博客文章！  </span><br><span class="line"><span class="bullet">-</span> 学习 Hexo  </span><br><span class="line"><span class="bullet">-</span> 写博客  </span><br><span class="line"><span class="bullet">-</span> 分享知识</span><br></pre></td></tr></table></figure>
</li>
<li><p>本地预览文章：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>
</li>
<li><p>发布到你的博客：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo generate <span class="comment">#或hexo g</span></span><br><span class="line">G:\MyBlog&gt;hexo deploy <span class="comment">#或hexo d</span></span><br></pre></td></tr></table></figure>

<p>这样，你的第一篇 Hexo 博客文章就完成了！</p>
</li>
<li><p>修改博文的办法，重复编辑文章内容，再次发布即可！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo generate &amp;&amp; hexo deploy </span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Next主题博客个性化配置</title>
    <url>/2024/12/15/Hexo-Next%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>  本篇博客记录了如何在 Hexo 博客中使用 Next 主题实现以下功能：</p>
<ul>
<li>文章字数统计和阅读时长</li>
<li>全站字数统计和阅读时长</li>
<li>站内搜索</li>
<li>首页显示摘要和阅读全文按钮</li>
<li>网站运行时长<br>通过这些功能，提升博客的用户体验和数据统计能力。<span id="more"></span></li>
</ul>
<h2 id="1-字数统计和阅读时长"><a href="#1-字数统计和阅读时长" class="headerlink" title="1. 字数统计和阅读时长"></a>1. 字数统计和阅读时长</h2><h3 id="功能简介"><a href="#功能简介" class="headerlink" title="功能简介"></a>功能简介</h3><h4 id="文章字数统计和阅读时长"><a href="#文章字数统计和阅读时长" class="headerlink" title="文章字数统计和阅读时长"></a>文章字数统计和阅读时长</h4><p>通过统计文章字数，展示每篇文章的字数以及预计的阅读时长。例如：</p>
<blockquote>
<p>本文字数： 6.1k   阅读时长 ≈ 6 分钟</p>
</blockquote>
<h4 id="全站字数统计和阅读时长"><a href="#全站字数统计和阅读时长" class="headerlink" title="全站字数统计和阅读时长"></a>全站字数统计和阅读时长</h4><p>统计博客中所有文章的总字数，展示博客内容的规模。例如：</p>
<blockquote>
<p>站点总字数： 7k |  站点阅读时长 ≈ 6 分钟</p>
</blockquote>
<h3 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h3><ul>
<li>进入本地博客部署的根目录，安装插件<code>hexo-symbols-count-time</code><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">g:</span><br><span class="line"><span class="built_in">cd</span> G:\MyBlog</span><br><span class="line">G:\MyBlog&gt;npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></li>
<li>修改站点配置文件（<code>G:\MyBlog\_config.yml</code>），如果没有，在底部添加：<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="comment">#文章内是否显示</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#网页底部是否显示</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
<li>修改主题配置文件（<code>G:\MyBlog\themes\next\_config.yml</code>），缺失的参数请按照如下添加：<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#文章中的显示是否显示文字（本文字数|阅读时长） </span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#网页底部的显示是否显示文字（站点总字数|站点阅读时长） </span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Average Word Length (chars count in word)</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span></span><br><span class="line">  <span class="comment"># Words Per Minute</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br></pre></td></tr></table></figure></li>
<li>查看效果，运行如下命令后，访问127.0.0.1：4000：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="2-站内搜索"><a href="#2-站内搜索" class="headerlink" title="2. 站内搜索"></a>2. 站内搜索</h2><h3 id="功能简介-1"><a href="#功能简介-1" class="headerlink" title="功能简介"></a>功能简介</h3><p>支持站内搜索，方便用户快速定位文章内容，示例如本站的搜索功能。</p>
<h3 id="实现方法-1"><a href="#实现方法-1" class="headerlink" title="实现方法"></a>实现方法</h3><ul>
<li>进入本地博客部署的根目录，安装插件<code>hexo-generator-searchdb</code><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li>
<li>修改站点配置文件（<code>G:\MyBlog\_config.yml</code>），新增以下内容到任意位置：<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></li>
<li>修改主题配置文件（<code>G:\MyBlog\themes\next\_config.yml</code>）：<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
<li>查看效果，运行如下命令后，访问127.0.0.1：4000：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="3-首页摘要和阅读全文按钮"><a href="#3-首页摘要和阅读全文按钮" class="headerlink" title="3. 首页摘要和阅读全文按钮"></a>3. 首页摘要和阅读全文按钮</h2><h3 id="功能简介-2"><a href="#功能简介-2" class="headerlink" title="功能简介"></a>功能简介</h3><p>在首页显示每篇文章的摘要，并提供“阅读全文”按钮跳转到完整内容页面。</p>
<h3 id="实现方法-2"><a href="#实现方法-2" class="headerlink" title="实现方法"></a>实现方法</h3><ul>
<li><p>修改主题配置文件（<code>G:\MyBlog\themes\next\_config.yml</code>）：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
<li><p>方法一：写概述<br>在对应文章对 front-matter（文章文件最上方以—分割对区域，是用来指定个别文件的配置变量区域）中添加description变量，其中description变量设置的内容就会被显示在首页上门，其余的文案一律不显示。配置如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo-Next主题博客个性化配置</span><br><span class="line">date: 2024-12-15 12:33:01</span><br><span class="line">tags: &quot;日常折腾&quot;</span><br><span class="line">categories: &quot;博客搭建&quot;</span><br><span class="line"><span class="section">description: 这里写要显示的摘要</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<p>这个方法可以撰写独立的摘要内容，并显示在首页，可以单独做概括，确保摘要内容恰当。<br>缺点是需要单独写概述，增加额外的撰写实践，且容易造成写作思路打断。<br>如果懒得写摘要，可以尝试第二种方法。</p>
</li>
<li><p>方法二：文章截断显示<br>在文章正文部分需要截断的地方加入以下代码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>
<p>这样HEXO在生成首页的时候，就只显示<code>&lt;!--more--&gt;</code>之前的内容，隐藏其余部分。<br>优点：方便，不需要单独写摘要，专注正文写作</p>
</li>
<li><p>查看效果，运行如下命令后，访问127.0.0.1：4000：</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="4-网站运行时长"><a href="#4-网站运行时长" class="headerlink" title="4. 网站运行时长"></a>4. 网站运行时长</h2><h3 id="功能简介-3"><a href="#功能简介-3" class="headerlink" title="功能简介"></a>功能简介</h3><p>在页面底部动态展示网站的运行天数，增强用户互动性。例如：</p>
<blockquote>
<p>已运行 365 天 05 小时 25 分 55 秒</p>
</blockquote>
<h3 id="实现方法-3"><a href="#实现方法-3" class="headerlink" title="实现方法"></a>实现方法</h3><ul>
<li><p>打开<code>themes\next\layout\_partial\footer.swig</code>，在最后位置添加如下代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;timeDate&quot;</span>&gt;</span>载入天数...<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;times&quot;</span>&gt;</span>载入时分秒...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>(); </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">createtime</span>(<span class="params"></span>) &#123; </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> grt= <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;08/10/2020 00:00:00&quot;</span>);<span class="comment">//在此处修改你的建站时间</span></span></span><br><span class="line"><span class="language-javascript">        now.<span class="title function_">setTime</span>(now.<span class="title function_">getTime</span>()+<span class="number">250</span>); </span></span><br><span class="line"><span class="language-javascript">        days = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>; dnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(days); </span></span><br><span class="line"><span class="language-javascript">        hours = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * dnum); hnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(hours); </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(<span class="title class_">String</span>(hnum).<span class="property">length</span> ==<span class="number">1</span> )&#123;hnum = <span class="string">&quot;0&quot;</span> + hnum;&#125; minutes = (now - grt ) / <span class="number">1000</span> /<span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * hnum); </span></span><br><span class="line"><span class="language-javascript">        mnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(minutes); <span class="keyword">if</span>(<span class="title class_">String</span>(mnum).<span class="property">length</span> ==<span class="number">1</span> )&#123;mnum = <span class="string">&quot;0&quot;</span> + mnum;&#125; </span></span><br><span class="line"><span class="language-javascript">        seconds = (now - grt ) / <span class="number">1000</span> - (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * <span class="number">60</span> * hnum) - (<span class="number">60</span> * mnum); </span></span><br><span class="line"><span class="language-javascript">        snum = <span class="title class_">Math</span>.<span class="title function_">round</span>(seconds); <span class="keyword">if</span>(<span class="title class_">String</span>(snum).<span class="property">length</span> ==<span class="number">1</span> )&#123;snum = <span class="string">&quot;0&quot;</span> + snum;&#125; </span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;timeDate&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;已运行 &quot;</span>+dnum+<span class="string">&quot; 天 &quot;</span>; </span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;times&quot;</span>).<span class="property">innerHTML</span> = hnum + <span class="string">&quot; 小时 &quot;</span> + mnum + <span class="string">&quot; 分 &quot;</span> + snum + <span class="string">&quot; 秒&quot;</span>; </span></span><br><span class="line"><span class="language-javascript">    &#125; </span></span><br><span class="line"><span class="language-javascript"><span class="built_in">setInterval</span>(<span class="string">&quot;createtime()&quot;</span>,<span class="number">250</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>查看效果，运行如下命令后，访问127.0.0.1：4000：</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令提示符（cmd）或PowerShell</span></span><br><span class="line">G:\MyBlog&gt;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>


<hr>
<p>通过以上配置，Hexo 博客的功能和用户体验将得到显著提升，打造出更加个性化的博客平台。</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
</search>
